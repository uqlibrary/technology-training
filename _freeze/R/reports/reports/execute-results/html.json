{
  "hash": "78eb79c0887449a1923de1435ad834df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R reproducible reports with Quarto\"\neditor: source\ndate: today\nauthor: UQ Library\n---\n\n\n\n## Setting up\n\n> If you don't have R and RStudio installed already, we have [installation instructions](../installation.qmd)\n\n* If you are using your own laptop please open RStudio\n    + Make sure you have a working Internet connection\n* On the Library's training computers:\n    + Log in with your UQ username and password\n    + Make sure you have a working Internet connection\n    + Open the ZENworks application\n    + Look for \"RStudio\"\n    + Double click on RStudio, which will install both R and RStudio\n\nRecent versions of RStudio already include Quarto.\n\nWith RStudio open, let's make sure we have the necessary packages installed by running this command (this might take a few minutes):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"tidyverse\", \"plotly\", \"htmltools\"))\n```\n:::\n\n\nThis will install the Tidyverse packages, the plotly package for interactive visualisations, and the htmltools package for having all bases covered for rendering HTML documents.\n\n> If R asks about installing a binary or building from source, **pick the binary option**: it will be faster!\n\n## What are we going to learn?\n\nR is a great tool to go from importing to reporting. Today, we focus on the \"reporting\" part.\n\nUsing R, RStudio, the Markdown syntax and the Quarto publishing system, we can create **reproducible reports** that mix code and prose. If the underlying data changes, we only need to replace the original data file and \"render\" the report once more, which updates all its contents in one click.\n\n## Create a Quarto project\n\nUse the project menu (top right) to **create a \"New project...\"**. Let's select the project type \"Quarto Project\" and name this one \"reports\".\n\nThis kind of project automatically creates a `.qmd` file for us, but if you have an existing R project and want to add a report to it, you can also create only that file with: \"File > New File > Quarto Document...\". \nIf you create a single file, you can use the dialog to choose the title of the report, and add the author. For a generic report, the HTML output is the most versatile and the one we use for this tutorial (and it is Quarto's default anyway).\n\n## Quarto document structure and rendering\n\nSee how the document is already populated with a template? Scroll through and have a look at how it is structured. The three main elements are:\n\n* a **YAML header** at the top, between the `---` tags;\n* **Markdown** sections, where we can write prose, format text and add headings;\n* and **code chunks**, in between ```` ``` ```` where we can write R code.\n\nBut before we edit this document, let's go straight to the **\"Render\" button** at the top of the source panel. Clicking that button will **compile** a document from the Quarto file. You should see the process unfolding in the \"Background Jobs\" tab, and the HTML document pop up in a separate window when it is finished.\n\nSee how the document contains a title, headers, code input and output, and formatted paragraphs?\n\n## A note on R Markdown\n\nR Markdown was the predecessor to Quarto. If you have existing `.Rmd` files, you should be able to move them to Quarto with no or very minimal modification. That being said, R Markdown is here to stay and you can keep using it independently from Quarto.\n\n## Editing the document\n\nLet's remove everything below our YAML header, and start writing our own report!\n\nNote that by default, the editor uses the \"Visual\" mode. We can change it to \"Source\" for now, using the editor toolbar, to familiarise ourselves with the syntax.\n\n### Markdown syntax\n\n[Markdown](https://quarto.org/docs/authoring/markdown-basics.html) is a markup language that allows us to format text with simple tags, similarly to HTML or LaTeX.\n\nTo add a **heading**, we can start a line with `##`: this will be a heading of level 2. The number of hash symbols corresponds to the level of the header.\n\nWe are going to deal with greenhouse gas emissions for Australia, so let's add a header and some text about the source of the data and how to import it. For example:\n\n```\n## National Greenhouse Gas data\n\nOur data is extracted from the _National Inventory by Economic Sector_ dataset, which is part of the _National Greenhouse Accounts_, and is released under a [CC-BY](https://creativecommons.org/licenses/by/4.0/) licence. The latest release can be found on [this page](https://www.dcceew.gov.au/climate-change/publications/national-greenhouse-accounts-2022/national-inventory-by-economic-sector-2022).\n\nThe values are reported in Mt CO<sub>2</sub>-e.\n```\n\nNotice how we used a `[text](link)` syntax to add a link to a website?\n\n#### Challenge 1\n\nWe can also style our text by surrounding with other tags:\n\n* `**` for **bold**\n* `*` for *italic*\n\nTry to style your text, and add a heading of level 3 for a section on \"importing the data\". Render the document to see if it works!\n\n### R code chunks\n\nWe can now add a **code chunk** to include some R code inside our reproducible document. To add a code chunk, click the \"Insert a new code chunk\" button at the top of the source panel, and click \"R\". You can see that the language of the code chunk is defined at the top, with `{r}` (but other languages, like Python, are also supported in Quarto).\n\n\n````{.default}\n```{r}\ncode_goes_here\n```\n````\n\nLet's import the Tidyverse, by including this code in the chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nNotice that you can **run your chunks of code** one by one by clicking the green \"play\" button at the right of the chunk: you don't have to render the whole document every time you want to test your code.\n\nNow, try to render the document and see what it looks like.\n\n#### Challenge 2\n\nInside a new chunk, add some code to import the dataset located [here](https://raw.githubusercontent.com/uqlibrary/technology-training/master/R/reports/aus_ghg_2019.csv) into an object called `ghg`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nghg <- read_csv(\"https://raw.githubusercontent.com/uqlibrary/technology-training/master/R/reports/aus_ghg_2019.csv\")\n```\n:::\n\n\n> Clicking \"Render\" will automatically save your `.qmd` file as well as the HTML output.\n\nNow, we can add a chunk to show the data, by including this code in it:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nghg\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Agriculture, Forestry and Fishing\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Forestry - Changes in Inventories\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mining\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Manufacturing\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Electricity, Gas, Water and Waste Services\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Services, Construction and Transport\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Residential\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1990\",\"2\":\"291.777\",\"3\":\"-14.110\",\"4\":\"46.248\",\"5\":\"67.349\",\"6\":\"150.558\",\"7\":\"38.019\",\"8\":\"49.797\"},{\"1\":\"1991\",\"2\":\"271.671\",\"3\":\"-7.103\",\"4\":\"46.916\",\"5\":\"67.158\",\"6\":\"152.057\",\"7\":\"34.724\",\"8\":\"49.255\"},{\"1\":\"1992\",\"2\":\"202.922\",\"3\":\"-15.141\",\"4\":\"48.983\",\"5\":\"67.371\",\"6\":\"155.424\",\"7\":\"41.793\",\"8\":\"49.865\"},{\"1\":\"1993\",\"2\":\"183.560\",\"3\":\"-19.420\",\"4\":\"49.706\",\"5\":\"67.725\",\"6\":\"154.727\",\"7\":\"42.648\",\"8\":\"50.917\"},{\"1\":\"1994\",\"2\":\"173.732\",\"3\":\"-7.751\",\"4\":\"47.903\",\"5\":\"67.875\",\"6\":\"154.718\",\"7\":\"40.747\",\"8\":\"51.283\"},{\"1\":\"1995\",\"2\":\"148.670\",\"3\":\"-12.317\",\"4\":\"50.087\",\"5\":\"67.680\",\"6\":\"160.878\",\"7\":\"40.393\",\"8\":\"52.688\"},{\"1\":\"1996\",\"2\":\"150.970\",\"3\":\"-17.967\",\"4\":\"51.566\",\"5\":\"65.925\",\"6\":\"163.096\",\"7\":\"42.538\",\"8\":\"53.297\"},{\"1\":\"1997\",\"2\":\"158.628\",\"3\":\"-21.053\",\"4\":\"55.206\",\"5\":\"66.619\",\"6\":\"168.312\",\"7\":\"36.805\",\"8\":\"53.333\"},{\"1\":\"1998\",\"2\":\"143.542\",\"3\":\"-16.283\",\"4\":\"57.040\",\"5\":\"67.057\",\"6\":\"179.424\",\"7\":\"33.490\",\"8\":\"53.485\"},{\"1\":\"1999\",\"2\":\"152.410\",\"3\":\"-16.355\",\"4\":\"54.807\",\"5\":\"68.397\",\"6\":\"185.604\",\"7\":\"36.065\",\"8\":\"52.425\"},{\"1\":\"2000\",\"2\":\"155.424\",\"3\":\"-13.502\",\"4\":\"58.531\",\"5\":\"67.489\",\"6\":\"188.933\",\"7\":\"44.843\",\"8\":\"53.798\"},{\"1\":\"2001\",\"2\":\"177.507\",\"3\":\"-10.575\",\"4\":\"58.820\",\"5\":\"67.462\",\"6\":\"195.997\",\"7\":\"42.536\",\"8\":\"54.294\"},{\"1\":\"2002\",\"2\":\"176.976\",\"3\":\"-20.386\",\"4\":\"58.790\",\"5\":\"67.527\",\"6\":\"197.463\",\"7\":\"43.223\",\"8\":\"55.992\"},{\"1\":\"2003\",\"2\":\"177.722\",\"3\":\"-17.437\",\"4\":\"56.317\",\"5\":\"71.911\",\"6\":\"198.443\",\"7\":\"47.351\",\"8\":\"58.025\"},{\"1\":\"2004\",\"2\":\"172.141\",\"3\":\"-22.478\",\"4\":\"56.938\",\"5\":\"73.323\",\"6\":\"206.354\",\"7\":\"48.245\",\"8\":\"59.703\"},{\"1\":\"2005\",\"2\":\"206.446\",\"3\":\"-29.479\",\"4\":\"60.099\",\"5\":\"72.471\",\"6\":\"207.695\",\"7\":\"47.190\",\"8\":\"59.794\"},{\"1\":\"2006\",\"2\":\"196.737\",\"3\":\"-29.295\",\"4\":\"61.069\",\"5\":\"71.573\",\"6\":\"212.004\",\"7\":\"52.278\",\"8\":\"60.502\"},{\"1\":\"2007\",\"2\":\"198.687\",\"3\":\"-29.250\",\"4\":\"63.916\",\"5\":\"73.965\",\"6\":\"214.714\",\"7\":\"61.886\",\"8\":\"60.823\"},{\"1\":\"2008\",\"2\":\"176.206\",\"3\":\"-30.271\",\"4\":\"64.233\",\"5\":\"75.023\",\"6\":\"217.237\",\"7\":\"66.875\",\"8\":\"61.185\"},{\"1\":\"2009\",\"2\":\"170.737\",\"3\":\"-23.908\",\"4\":\"66.839\",\"5\":\"68.511\",\"6\":\"222.007\",\"7\":\"65.272\",\"8\":\"61.215\"},{\"1\":\"2010\",\"2\":\"158.609\",\"3\":\"-24.062\",\"4\":\"66.135\",\"5\":\"70.624\",\"6\":\"216.684\",\"7\":\"62.360\",\"8\":\"61.543\"},{\"1\":\"2011\",\"2\":\"138.521\",\"3\":\"-31.863\",\"4\":\"67.013\",\"5\":\"71.112\",\"6\":\"209.199\",\"7\":\"67.993\",\"8\":\"62.415\"},{\"1\":\"2012\",\"2\":\"142.743\",\"3\":\"-37.705\",\"4\":\"70.154\",\"5\":\"68.738\",\"6\":\"207.922\",\"7\":\"57.870\",\"8\":\"62.232\"},{\"1\":\"2013\",\"2\":\"141.757\",\"3\":\"-37.541\",\"4\":\"74.049\",\"5\":\"67.589\",\"6\":\"194.501\",\"7\":\"56.718\",\"8\":\"61.995\"},{\"1\":\"2014\",\"2\":\"140.697\",\"3\":\"-42.692\",\"4\":\"73.067\",\"5\":\"66.200\",\"6\":\"188.141\",\"7\":\"57.975\",\"8\":\"63.654\"},{\"1\":\"2015\",\"2\":\"124.306\",\"3\":\"-44.590\",\"4\":\"77.538\",\"5\":\"61.816\",\"6\":\"195.892\",\"7\":\"64.877\",\"8\":\"65.002\"},{\"1\":\"2016\",\"2\":\"104.760\",\"3\":\"-46.129\",\"4\":\"81.911\",\"5\":\"59.535\",\"6\":\"201.859\",\"7\":\"63.296\",\"8\":\"64.809\"},{\"1\":\"2017\",\"2\":\"99.439\",\"3\":\"-45.549\",\"4\":\"88.329\",\"5\":\"58.907\",\"6\":\"196.615\",\"7\":\"62.966\",\"8\":\"65.985\"},{\"1\":\"2018\",\"2\":\"113.879\",\"3\":\"-42.839\",\"4\":\"94.599\",\"5\":\"59.198\",\"6\":\"190.534\",\"7\":\"57.096\",\"8\":\"65.963\"},{\"1\":\"2019\",\"2\":\"93.227\",\"3\":\"-36.402\",\"4\":\"99.705\",\"5\":\"58.223\",\"6\":\"186.629\",\"7\":\"62.447\",\"8\":\"65.470\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n###  Working directory\n\nNote that the **working directory** for a Quarto document will be the `.qmd` file's location by default (and not necessarily the working directory of the R project your are in). That is why it is a good idea to save your Quarto file at the top of your project directory if you want consistency between your scripts and your Quarto file.\n\nIn our example, we load a CSV file from the Internet, but if we had a data file stored locally, it is important to keep that in mind.\n\n### Chunk options\n\nNotice how our two first chunks show some messages as an output? We might want to remove that if it is not important and we don't want to include it in the report. At the top of your chunk, you can use **code chunk options** like so:\n\n\n````{.default}\n```{r}\n#| option1: value\n#| option2: value\ncode_goes_here\n```\n````\n\nFor example, include this option to hide messages in the output:\n\n```\n#| message: false\n```\n\nThe code will be executed and the output (if there is any) will be shown, but the messages won't!\n\nThere are [various options to choose from](https://quarto.org/docs/computations/execution-options.html), depending on what you want to do and show with your chunk of code. For example, to hide both messages and warnings, and only show the output of the code (without showing the underlying code), you can use these options, separated by commas:\n\n```\n#| message: false\n#| warning: false\n#| echo: false\n```\n\nIt also is a good idea to **label your chunks**, especially in longer documents, so you can spot issues more easily. It won't be shown in the report, but will be used in the console and can be used to navigate your script (with the dropdown menu at the bottom of the source panel). For example, for our first chunk:\n\n```\n#| label: load-packages\n#| message: false\n```\n\nThese labels also allow you to use [cross-references](https://quarto.org/docs/authoring/cross-references.html) when generating plots.\n\nIt is also possible to include options in the YAML header at the top of the document, to set default options you want to use for all you chunks. That is particularly useful if you want to define a default size for all your figures, for example.\n\nHere is an example of \"execute\" options you might use in your YAML header:\n\n```\n---\ntitle: \"My Report\"\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n```\n\nThat would make sure that, by default:\n\n* The code is shown, but\n* the messages and warnings are hidden.\n\n## Errors when rendering\n\nIt should be straight forward to find where an issue comes from when rendering a report does not work.\n\n### Challenge 3\n\n1. Try changing a chunk code so the code is not valid.\n1. What can you see in the console? Which parts are helpful to identify the issue?\n\n## Tidy the data\n\nLet's keep populating our report with more code. Our data is not respecting the tidy data principles, so let's fix that first with a tidyr function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nghg_tidy <- pivot_longer(ghg,\n                         -year,\n                         names_to = \"sector\",\n                         values_to = \"emissions\")\n```\n:::\n\n\n## Inline code\n\nWe can also **include code that will be executed *inside* Markdown text**. For example, you can write the following sentence:\n\n> The dataset contains GHG emissions for the period `` `{{r}} min(ghg$year)` `` to `` `{{r}} max(ghg$year)` ``. The maximum GHG emissions recorded for the mining sector is `` `{{r}} round(max(ghg$Mining), 2)` `` Mt CO<sub>2</sub>-e.\n\n## Visualisation\n\nWe can also include a visualisation using, for example, ggplot2:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ghg_tidy, aes(x = year, y = emissions, colour = sector)) +\n  geom_line() +\n  ylab(\"emissions (Mt CO2e)\")\n```\n\n::: {.cell-output-display}\n![](reports_files/figure-html/viz-1.png){width=672}\n:::\n:::\n\n\n> If you want to hide the code that created an output, like for this plot, you can add the option `#| echo: false` to it.\n\nFinally, let's create an interactive version of our plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\np <- ggplot(ghg_tidy, aes(x = year, y = emissions, colour = sector)) +\n  geom_line() +\n  ylab(\"emissions (Mt CO2e)\")\nggplotly(p)\n```\n:::\n\n\nThis will work in a HTML document, but will most likely fail in other output formats.\n\nIf you want to change the size of your visualisations, you can tweak the width and height with chunk options like `fig-width: 8`. However, to make that consistent for all your figures, better use an extra default option in the YAML header. For example:\n\n```\nformat: \n  html:\n    fig-width: 8\n    fig-height: 6\n```\n\n## Update the report\n\nWe have an updated version of the dataset. The only thing we need to do to update the whole report is point the data import code to the new file, at the top of our document, changing the year to \"2022\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\nghg <- read_csv(\"https://raw.githubusercontent.com/uqlibrary/technology-training/master/R/reports/aus_ghg_2022.csv\")\n```\n:::\n\n\nRendering again will update all the objects and visualisations for us! This is the power of reproducible reports in R.\n\nWith reproducible reports, you can potentially structure and write (most of) a report even before you have your research project's final dataset. (Well, at least the data analysis part, maybe not so much the conclusions!)\n\n## Output formats\n\nThe benefits of using HTML documents are multiple:\n\n* figures won't break the flow of the document by jumping to the next page and leaving a large blank space;\n* you can include interactive visualisations making use of the latest HTML features;\n* they can be directly integrated into a website.\n\nHowever, other output formats are available. Here are some examples for the `format` value in your YAML header:\n\n* `pdf` for a non-editable, widespread, portable format\n* `docx` and `odt` to open and edit with Microsoft Word and LibreOffice Writer\n* `gfm` for a Markdown file that can easily be published on GitHub or GitLab\n* `dashboard` for a card-based dashboard\n* and [more](https://quarto.org/docs/output-formats/all-formats.html), including for creating slides.\n\n### Rendering to PDF\n\nIn some cases, you might be required to share your report as a PDF. Rendering your document to PDF can generate very professional-looking reports, but it will require having extra software on your computer.\n\nYou can install the necessary LaTeX packages with an R package called TinyTeX, which is a great alternative to very big LaTeX distributions that can be several gigabytes-big.\n\nIn a terminal, run the following:\n\n```\nquarto install tinytex\n```\n\nAfter this, try to change your YAML header's `format` value to `pdf` and render it.\n\n## Useful links\n\nRelated to R Markdown and knitr:\n\n* [Official Quarto website](https://quarto.org/)\n  * [Tutorial](https://quarto.org/docs/get-started/hello/rstudio.html)\n  * [Guide](https://quarto.org/docs/guide/)\n  * [Options Reference](https://quarto.org/docs/reference/)\n  * [Blog](https://quarto.org/docs/blog/)\n* [Quarto Cheatsheet](https://rstudio.github.io/cheatsheets/quarto.pdf)\n\nWe also have a general [list of recommended R resources](../usefullinks.md).",
    "supporting": [
      "reports_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}